{
  "name": "roundtable-billing-dashboard",
  "version": "1.0.0",
  "private": true,
  "packageManager": "pnpm@10.11.0",
  "description": "Roundtable Billing Dashboard - Advanced billing solutions for AI collaboration platforms. Multiple AI Models Brainstorm Together.",
  "author": "Roundtable <hello@roundtable.now>",
  "homepage": "https://roundtable.now/",
  "repository": {
    "type": "git",
    "url": "https://github.com/roundtable/billing-dashboard"
  },
  "keywords": [
    "roundtable",
    "AI collaboration",
    "billing",
    "payments",
    "zarinpal",
    "subscriptions",
    "brainstorming",
    "multiple models",
    "misaligned",
    "cloudflare",
    "cloudflare workers",
    "edge",
    "nextjs",
    "dashboard",
    "iranian-payments",
    "rial"
  ],
  "exports": {
    ".": {
      "types": "./dist/api/index.d.ts",
      "import": "./dist/api/index.js"
    },
    "./next-dev": {
      "types": "./dist/next-dev/index.d.ts",
      "import": "./dist/next-dev/index.cjs",
      "require": "./dist/next-dev/index.cjs"
    }
  },
  "files": [
    "bin",
    "dist",
    "no-nodejs-compat-flag-static-error-page/dist",
    "templates"
  ],
  "engines": {
    "node": ">=22.14.0"
  },
  "scripts": {
    "dev": "npx concurrently --names \"web,mcp\" --prefix-colors \"cyan,yellow\" \"next dev --turbo\" \"npx @agentdeskai/browser-tools-server@1.2.0\"",
    "dev:web": "next dev --turbo",
    "dev:mcp": "npx @agentdeskai/browser-tools-server@1.2.0",
    "dev:email": "email dev --dir src/emails --port 3001",
    "email:preview": "email dev --dir src/emails --port 3001",
    "email:build": "email build --dir src/emails --out dist/emails",
    "email:export": "email export --dir src/emails --out dist/emails",
    "build": "node -v && next build",
    "start": "next start",
    "build-stats": "cross-env ANALYZE=true npm run build",
    "clean": "rimraf .next out",
    "clean:all": "rimraf .next .swc out node_modules pnpm-lock.yaml .pnpm-store",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:file": "eslint --fix --max-warnings 10 --format unix",
    "lint:errors-only": "eslint --format compact | grep -E 'error' | wc -l | xargs",
    "lint:modified": "git diff --name-only --diff-filter=ACM | grep -E '\\.(ts|tsx|js|jsx)$' | xargs -I {} sh -c 'echo \"Checking {}...\" && eslint {} --max-warnings 10'",
    "check-types": "tsc --noEmit --pretty",
    "check-types:file": "tsc --noEmit --skipLibCheck",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "generate:icons": "npx @svgr/cli --memo --ref --typescript --prettier-config .prettierrc --out-dir src/icons/component --icon --replace-attr-values -- src/icons/svg --ignore-existing",
    "cf-typegen": "wrangler types --env-interface CloudflareEnv cloudflare-env.d.ts",
    "cf-setup": "echo 'Setting up Cloudflare types...' && pnpm cf-typegen && echo 'Types generated successfully!'",
    "build:worker": "opennextjs-cloudflare build",
    "preview:worker": "opennextjs-cloudflare preview",
    "preview": "pnpm build:worker && pnpm preview:worker",
    "deploy:worker": "opennextjs-cloudflare deploy",
    "deploy": "pnpm build:worker && pnpm deploy:worker",
    "upload": "pnpm build:worker && opennextjs-cloudflare upload",
    "deploy:preview": "pnpm build:worker && opennextjs-cloudflare deploy -- --env=preview",
    "deploy:production": "pnpm build:worker && opennextjs-cloudflare deploy -- --env=production",
    "db:push": "drizzle-kit push",
    "db:drop": "drizzle-kit drop",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:drop-all:local": "rm -rf .wrangler/state/v3/d1/*",
    "db:push:local": "npx wrangler d1 execute DB --local --file=$(ls ./src/db/migrations/*.sql | head -n 1)",
    "db:push:preview": "npx wrangler d1 execute DB --remote --preview --file=$(ls ./src/db/migrations/*.sql | head -n 1)",
    "db:push:prod": "npx wrangler d1 execute DB --remote --file=$(ls ./src/db/migrations/*.sql | head -n 1)",
    "db:migrate:local": "wrangler d1 migrations apply DB --local",
    "db:migrate:preview": "wrangler d1 migrations apply DB --remote --preview",
    "db:migrate:prod": "wrangler d1 migrations apply DB --remote",
    "db:studio:local": "cross-env NEXT_PUBLIC_WEBAPP_ENV=local drizzle-kit studio",
    "db:studio:preview": "cross-env NEXT_PUBLIC_WEBAPP_ENV=preview drizzle-kit studio",
    "db:studio:prod": "cross-env NEXT_PUBLIC_WEBAPP_ENV=prod drizzle-kit studio",
    "db:drop-all:preview": "npx wrangler d1 execute DB --remote --preview --file=./src/db/drop_all.sql",
    "db:drop-all:prod": "npx wrangler d1 execute DB --remote --file=./src/db/drop_all.sql",
    "db:full-reset:local": "pnpm db:drop-all:local && pnpm db:migrate:local",
    "db:full-reset:preview": "pnpm db:drop-all:preview && pnpm db:migrate:preview",
    "db:full-reset:prod": "pnpm db:drop-all:prod && pnpm db:migrate:prod",
    "db:full-reset-all:local": "pnpm db:drop-all:local && pnpm db:migrate:local && pnpm db:seed:all:local",
    "db:full-reset-blog:local": "pnpm db:drop-all:local && pnpm db:migrate:local && pnpm db:seed:static:local && pnpm db:seed:blog:local",
    "db:full-reset-blog:preview": "pnpm db:drop-all:preview && pnpm db:migrate:preview && pnpm db:seed:static:preview && pnpm db:seed:blog:preview",
    "db:full-reset-blog:prod": "pnpm db:drop-all:prod && pnpm db:migrate:prod && pnpm db:seed:static:prod && pnpm db:seed:blog:prod",
    "db:init:local": "npx wrangler d1 execute DB --local --file=./src/db/init_with_seed.sql",
    "db:init:preview": "npx wrangler d1 execute DB --remote --preview --file=./src/db/init_with_seed.sql",
    "db:init:prod": "npx wrangler d1 execute DB --remote --file=./src/db/init_with_seed.sql",
    "db:reset:local": "chmod +x ./src/db/scripts/reset_and_reseed.sh && ./src/db/scripts/reset_and_reseed.sh local",
    "db:reset:preview": "chmod +x ./src/db/scripts/reset_and_reseed.sh && ./src/db/scripts/reset_and_reseed.sh preview",
    "db:reset:prod": "chmod +x ./src/db/scripts/reset_and_reseed.sh && ./src/db/scripts/reset_and_reseed.sh prod",
    "db:fresh": "chmod +x ./scripts/reset-db-clean.sh && ./scripts/reset-db-clean.sh",
    "db:fresh:quick": "pnpm db:drop-all:local && pnpm db:migrate:local && npx tsx scripts/reset-db-fresh.ts",
    "db:seed:production": "npx tsx scripts/seed-production.ts",
    "db:deploy:fresh": "npm run db:push && npm run db:seed:production",
    "blog:schema": "tsc -p tsconfig.json src/tools/blog-generator/schema.ts",
    "blog:generate": "chmod +x ./src/tools/blog-generator/generate-blog.sh && ./src/tools/blog-generator/generate-blog.sh",
    "blog:generate:ts": "tsx src/tools/blog-generator/run-blog-generator.ts",
    "blog:add-to-db:local": "LAST_BLOG=$(ls -t ./src/tools/blog-generator/output/*.sql | head -1) && npx wrangler d1 execute DB --local --file=$LAST_BLOG",
    "blog:add-to-db:preview": "LAST_BLOG=$(ls -t ./src/tools/blog-generator/output/*.sql | head -1) && npx wrangler d1 execute DB --remote --preview --file=$LAST_BLOG",
    "blog:add-to-db:prod": "LAST_BLOG=$(ls -t ./src/tools/blog-generator/output/*.sql | head -1) && npx wrangler d1 execute DB --remote --file=$LAST_BLOG",
    "prepare": "husky",
    "knip": "knip",
    "i18n:validate": "tsx scripts/validate-translations.ts",
    "i18n:check-unused": "tsx scripts/find-unused-keys.ts",
    "i18n:find-hardcoded": "grep -r --include='*.tsx' --include='*.ts' --exclude-dir=node_modules --exclude-dir=.next '\"[^\"]*[A-Za-z][^\"]*\"' src/components/ src/app/ | grep -v 't(' | grep -v 'useTranslations' | head -20",
    "i18n:check-missing": "tsx scripts/check-missing-translations.ts",
    "i18n:full-check": "npm run i18n:validate && npm run i18n:check-unused && npm run i18n:find-hardcoded && npm run i18n:check-missing",
    "i18n:coverage": "tsx scripts/translation-coverage.ts"
  },
  "dependencies": {
    "@aws-sdk/client-ses": "^3.864.0",
    "@hono/zod-openapi": "^1.1.0",
    "@hookform/resolvers": "^5.2.1",
    "@opennextjs/cloudflare": "1.6.5",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-alert-dialog": "^1.1.15",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.14",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.8",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toast": "^1.2.15",
    "@radix-ui/react-toggle": "^1.1.10",
    "@radix-ui/react-toggle-group": "^1.1.11",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@react-email/components": "^0.3.1",
    "@react-email/render": "^1.1.2",
    "@scalar/hono-api-reference": "^0.9.13",
    "@scalar/openapi-to-markdown": "^0.2.26",
    "@tanstack/react-query": "^5.77.0",
    "@tanstack/react-table": "^8.21.3",
    "better-auth": "^1.3.4",
    "better-sqlite3": "^12.2.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "date-fns": "^4.1.0",
    "drizzle-kit": "^0.31.4",
    "drizzle-orm": "^0.44.4",
    "drizzle-zod": "^0.8.3",
    "hono": "^4.9.1",
    "lucide-react": "^0.511.0",
    "motion": "^12.12.2",
    "next": "15.3.2",
    "next-intl": "^4.1.0",
    "next-themes": "^0.4.6",
    "nuqs": "^2.4.3",
    "react": "19.1.0",
    "react-day-picker": "^9.7.0",
    "react-dom": "19.1.0",
    "react-email": "^4.0.15",
    "react-hook-form": "^7.62.0",
    "recharts": "2.15.4",
    "stoker": "^2.0.1",
    "tailwind-merge": "^3.3.0",
    "zod": "^4.0.17"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^4.13.2",
    "@cloudflare/workers-types": "^4.20250813.0",
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@commitlint/cz-commitlint": "^19.8.1",
    "@commitlint/types": "^19.8.1",
    "@eslint-react/eslint-plugin": "^1.49.0",
    "@next/eslint-plugin-next": "^15.3.2",
    "@playwright/test": "^1.55.0",
    "@tailwindcss/postcss": "^4.1.11",
    "@tanstack/eslint-plugin-query": "^5.74.7",
    "@types/better-sqlite3": "^7.6.13",
    "@types/eslint-plugin-jsx-a11y": "^6.10.0",
    "@types/eslint-plugin-tailwindcss": "^3.17.0",
    "@types/node": "^22.15.21",
    "@types/react": "^19.1.5",
    "@types/react-dom": "^19.1.5",
    "@vitejs/plugin-react": "^5.0.2",
    "autoprefixer": "^10.4.21",
    "commitizen": "^4.3.1",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "eslint": "^9.27.0",
    "eslint-plugin-format": "^1.0.1",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-tailwindcss": "^3.18.0",
    "husky": "^9.1.7",
    "inquirer": "^9.3.7",
    "jsdom": "^26.1.0",
    "knip": "^5.61.0",
    "lint-staged": "^16.0.0",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "shadcn": "^3.2.1",
    "tailwindcss": "^4.1.7",
    "tsx": "^4.19.4",
    "typescript": "5.8.3",
    "vitest": "^3.2.4",
    "wrangler": "^4.29.1"
  },
  "config": {
    "commitizen": {
      "path": "@commitlint/cz-commitlint"
    }
  },
  "release": {
    "branches": [
      "main"
    ],
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "preset": "conventionalcommits"
        }
      ],
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      [
        "@semantic-release/npm",
        {
          "npmPublish": false
        }
      ],
      "@semantic-release/git",
      "@semantic-release/github"
    ]
  },
  "pnpm": {
    "ignoredBuiltDependencies": [
      "workerd"
    ],
    "onlyBuiltDependencies": [
      "@tailwindcss/oxide",
      "better-sqlite3",
      "core-js",
      "esbuild",
      "sharp",
      "unrs-resolver",
      "workerd",
      "yarn"
    ]
  }
}
